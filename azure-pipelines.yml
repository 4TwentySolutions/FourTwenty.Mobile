trigger:
  batch: true
  branches:
    include:
      - master
      - develop

pool:
  vmImage: macos-latest

name: $(packVersion)-pre$(Rev:r)

variables:
  - group: "Shared"
  - name: "buildConfiguration"
    value: "release"
  - name: "PathToMsBuildOnMacOS"
    value: 'mono /Applications/Visual\ studio.app/Contents/Resources/lib/monodevelop/bin/MSBuild/Current/bin/MSBuild.dll'
  - name: "PathToXamBaseCsproj"
    value: "XamBasePacket/XamBasePacket.csproj"

  
steps:
  - script: "$(PathToMsBuildOnMacOS) $(PathToXamBaseCsproj) /p:Configuration=$(buildConfiguration) /restore /t:Build /p:ContinuousIntegrationBuild=true /p:Deterministic=false /p:VersionNumber=$(packVersion) /p:Version=$(packVersion)"
    displayName: Build project  
  - script: echo "##vso[task.setvariable variable=ReleaseNotes]$(cat 'releasenotes.txt')"
    displayName: "Create release notes from file"
  - script: dotnet pack $(PathToXamBaseCsproj) -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/pre /p:VersionNumber=$(Build.BuildNumber) /p:Version=$(Build.BuildNumber) /p:PackageReleaseNotes=$(ReleaseNotes)
    displayName: NuGet pre-release pack
  - script: dotnet pack $(PathToXamBaseCsproj) -c $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/release /p:VersionNumber=$(packVersion) /p:Version=$(packVersion) /p:PackageReleaseNotes=$(ReleaseNotes)
    displayName: NuGet release pack
  # - task: NuGetToolInstaller@1
  #   displayName: 'Install latest Nugget'
  #   inputs:
  #     versionSpec: 5.x
  # - task: NuGetCommand@2
  #   displayName: 'NuGet pre-release pack'
  #   inputs:
  #     command: pack
  #     packagesToPack: package.nuspec
  #     versioningScheme: byEnvVar
  #     versionEnvVar: 'BUILD_BUILDNUMBER'
  #     buildProperties: 'branch=$(Build.SourceBranchName);notes=$(ReleaseNotes)'
  #     packDestination: '$(Build.ArtifactStagingDirectory)/pre'
  # - task: NuGetCommand@2
  #   displayName: 'NuGet release pack'
  #   inputs:
  #     command: pack
  #     packagesToPack: package.nuspec
  #     versioningScheme: byEnvVar
  #     versionEnvVar: packVersion
  #     buildProperties: 'branch=$(Build.SourceBranchName);notes=$(ReleaseNotes)'
  #     packDestination: '$(Build.ArtifactStagingDirectory)/release'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      ArtifactName: drop
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/pre'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: releasedrop'
    inputs:
      ArtifactName: releasedrop
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/release'